// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: addressbook.capnp

#include "addressbook.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<95> b_eb61b860b516458e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    142,  69,  22, 181,  96, 184,  97, 235,
     18,   0,   0,   0,   1,   0,   1,   0,
     66, 244, 125, 109, 222, 155, 209, 191,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     72, 187,  53,  58, 182, 147, 227, 223,
      1,   0,   0,   0,  98,   0,   0,   0,
     80, 104, 111, 110, 101,  78, 117, 109,
     98, 101, 114,   0,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    160,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    100,  13,  42,  64,  64, 202,  27, 236,
    157,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109,  97, 105, 108,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 104, 111, 110, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     72, 187,  53,  58, 182, 147, 227, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 109, 101,
    110, 116,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eb61b860b516458e = b_eb61b860b516458e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eb61b860b516458e[] = {
  &s_dfe393b63a35bb48,
  &s_ec1bca40402a0d64,
};
static const uint16_t m_eb61b860b516458e[] = {2, 4, 0, 1, 3};
static const uint16_t i_eb61b860b516458e[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_eb61b860b516458e = {
  0xeb61b860b516458e, b_eb61b860b516458e.words, 95, d_eb61b860b516458e, m_eb61b860b516458e,
  2, 5, i_eb61b860b516458e, nullptr, nullptr, { &s_eb61b860b516458e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_dfe393b63a35bb48 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72, 187,  53,  58, 182, 147, 227, 223,
     25,   0,   0,   0,   1,   0,   1,   0,
    142,  69,  22, 181,  96, 184,  97, 235,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46,  80, 104, 111, 110, 101,  78, 117,
    109,  98, 101, 114,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     24, 194,  15, 255, 126, 249,  90, 171,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 117, 109,  98, 101, 114,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     24, 194,  15, 255, 126, 249,  90, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dfe393b63a35bb48 = b_dfe393b63a35bb48.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dfe393b63a35bb48[] = {
  &s_ab5af97eff0fc218,
};
static const uint16_t m_dfe393b63a35bb48[] = {0, 1};
static const uint16_t i_dfe393b63a35bb48[] = {0, 1};
const ::capnp::_::RawSchema s_dfe393b63a35bb48 = {
  0xdfe393b63a35bb48, b_dfe393b63a35bb48.words, 52, d_dfe393b63a35bb48, m_dfe393b63a35bb48,
  1, 2, i_dfe393b63a35bb48, nullptr, nullptr, { &s_dfe393b63a35bb48, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_ab5af97eff0fc218 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     24, 194,  15, 255, 126, 249,  90, 171,
     37,   0,   0,   0,   2,   0,   0,   0,
     72, 187,  53,  58, 182, 147, 227, 223,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46,  80, 104, 111, 110, 101,  78, 117,
    109,  98, 101, 114,  46,  84, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111,  98, 105, 108, 101,   0,   0,
    104, 111, 109, 101,   0,   0,   0,   0,
    119, 111, 114, 107,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab5af97eff0fc218 = b_ab5af97eff0fc218.words;
#if !CAPNP_LITE
static const uint16_t m_ab5af97eff0fc218[] = {1, 0, 2};
const ::capnp::_::RawSchema s_ab5af97eff0fc218 = {
  0xab5af97eff0fc218, b_ab5af97eff0fc218.words, 32, nullptr, m_ab5af97eff0fc218,
  0, 3, nullptr, nullptr, nullptr, { &s_ab5af97eff0fc218, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_ab5af97eff0fc218, ab5af97eff0fc218);
static const ::capnp::_::AlignedData<81> b_ec1bca40402a0d64 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100,  13,  42,  64,  64, 202,  27, 236,
     25,   0,   0,   0,   1,   0,   1,   0,
    142,  69,  22, 181,  96, 184,  97, 235,
      4,   0,   7,   0,   1,   0,   4,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  80, 101, 114, 115, 111, 110,
     46, 101, 109, 112, 108, 111, 121, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    117, 110, 101, 109, 112, 108, 111, 121,
    101, 100,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 109, 112, 108, 111, 121, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 104, 111, 111, 108,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 108, 102,  69, 109, 112, 108,
    111, 121, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ec1bca40402a0d64 = b_ec1bca40402a0d64.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ec1bca40402a0d64[] = {
  &s_eb61b860b516458e,
};
static const uint16_t m_ec1bca40402a0d64[] = {1, 2, 3, 0};
static const uint16_t i_ec1bca40402a0d64[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_ec1bca40402a0d64 = {
  0xec1bca40402a0d64, b_ec1bca40402a0d64.words, 81, d_ec1bca40402a0d64, m_ec1bca40402a0d64,
  1, 4, i_ec1bca40402a0d64, nullptr, nullptr, { &s_ec1bca40402a0d64, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_a6b14f86bce54093 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    147,  64, 229, 188, 134,  79, 177, 166,
     18,   0,   0,   0,   1,   0,   0,   0,
     66, 244, 125, 109, 222, 155, 209, 191,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 100, 114, 101, 115, 115,  98,
    111, 111, 107,  46,  99,  97, 112, 110,
    112,  58,  65, 100, 100, 114, 101, 115,
    115,  66, 111, 111, 107,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    112, 101, 111, 112, 108, 101,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    142,  69,  22, 181,  96, 184,  97, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a6b14f86bce54093 = b_a6b14f86bce54093.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a6b14f86bce54093[] = {
  &s_eb61b860b516458e,
};
static const uint16_t m_a6b14f86bce54093[] = {0};
static const uint16_t i_a6b14f86bce54093[] = {0};
const ::capnp::_::RawSchema s_a6b14f86bce54093 = {
  0xa6b14f86bce54093, b_a6b14f86bce54093.words, 37, d_a6b14f86bce54093, m_a6b14f86bce54093,
  1, 1, i_a6b14f86bce54093, nullptr, nullptr, { &s_a6b14f86bce54093, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Person
#ifndef _MSC_VER
constexpr uint16_t Person::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Person::PhoneNumber
#ifndef _MSC_VER
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::PhoneNumber::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::PhoneNumber::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::PhoneNumber::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::PhoneNumber::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Person::Employment
#ifndef _MSC_VER
constexpr uint16_t Person::Employment::_capnpPrivate::dataWordSize;
constexpr uint16_t Person::Employment::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Person::Employment::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Person::Employment::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Person::Employment::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// AddressBook
#ifndef _MSC_VER
constexpr uint16_t AddressBook::_capnpPrivate::dataWordSize;
constexpr uint16_t AddressBook::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind AddressBook::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* AddressBook::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* AddressBook::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



